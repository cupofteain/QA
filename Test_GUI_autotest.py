import tkinter as tk
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.webdriver import Options
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import (
    TimeoutException,
    NoSuchElementException,
    StaleElementReferenceException,
)
import time
import re
import random

def log_message(message):
    log_field.insert(tk.END, message + "\n")
    log_field.see(tk.END)  # –ê–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–Ω–∏–∑
    window.update()

def run_test():
    driver = webdriver.Chrome()
        
    try:
        driver.get("https://front-qa.ecar.kz/")
        time.sleep(3)
        driver.maximize_window()
        log_message("üåê –û—Ç–∫—Ä—ã—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è —Ç–µ—Å—Ç–∞ ‚úîÔ∏è")
    except Exception as e:
        log_message(f"‚ùå –û—à–∏–±–∫–∞: {e}")

    try:
        confirm_button = WebDriverWait(driver, 10).until(
            EC.element_to_be_clickable(
                (
                    By.XPATH,
                    "//button[contains(@class, 'CitySelectModal_actionButton')]",
                )
            )
        )
        confirm_button.click()
        print("–ö–Ω–æ–ø–∫–∞ '–î–∞, –≤—Å—ë –≤–µ—Ä–Ω–æ' –Ω–∞–∂–∞—Ç–∞.")
        log_message("–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞ ‚úîÔ∏è")
    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")




    finally:
        time.sleep(3)
        driver.quit()
        log_message("üõë –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç.")

# –°–æ–∑–¥–∞–Ω–∏–µ –æ–∫–Ω–∞ Tkinter
window = tk.Tk()
window.title("–õ–æ–≥–∏ –∞–≤—Ç–æ—Ç–µ—Å—Ç–∞")
window.geometry("500x400")

# –ü–æ–ª–µ –¥–ª—è –ª–æ–≥–æ–≤
log_field = tk.Text(window, wrap="word", height=20, width=60)
log_field.pack(padx=10, pady=10)

# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–∞
run_button = tk.Button(window, text="–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç", command=run_test)
run_button.pack(pady=5)

# –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
window.mainloop()
